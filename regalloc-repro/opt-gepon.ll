; ModuleID = 'opt-gepon.bc'
source_filename = "llvm-link"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

%"struct.__HIP_Coordinates<__HIP_BlockIdx>::__X" = type { i8 }
%struct.rocfft_complex = type { double, double }

$_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE = comdat any

$_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE = comdat any

@lds_uchar = external hidden local_unnamed_addr addrspace(3) global [0 x i8], align 16
@_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE = weak protected addrspace(4) externally_initialized constant %"struct.__HIP_Coordinates<__HIP_BlockIdx>::__X" undef, comdat, align 1
@_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE = weak protected addrspace(4) externally_initialized constant %"struct.__HIP_Coordinates<__HIP_BlockIdx>::__X" undef, comdat, align 1
@__hip_cuid_8edb34f756686994 = addrspace(1) global i8 0
@llvm.compiler.used = appending addrspace(1) global [3 x ptr] [ptr addrspacecast (ptr addrspace(4) @_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE to ptr), ptr addrspacecast (ptr addrspace(4) @_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE to ptr), ptr addrspacecast (ptr addrspace(1) @__hip_cuid_8edb34f756686994 to ptr)], section "llvm.metadata"

; Function Attrs: convergent nocallback nofree nounwind willreturn memory(none)
declare i32 @llvm.amdgcn.readfirstlane(i32) #0

; Function Attrs: convergent mustprogress nofree norecurse nounwind
define protected amdgpu_kernel void @fft_rtc_back_len125_factors_5_5_5_wgs_400_tpt_25_dp_op_CI_CI_sbcc_twdbase8_2step_dirReg_intrinsicReadWrite(ptr addrspace(1) noalias nocapture noundef readonly %twiddles.coerce, ptr addrspace(1) nocapture noundef readonly %large_twiddles.coerce, i64 noundef %dim, ptr addrspace(1) noalias nocapture noundef readonly %lengths.coerce, ptr addrspace(1) noalias nocapture noundef readonly %stride_in.coerce, ptr addrspace(1) noalias nocapture noundef readonly %stride_out.coerce, i64 noundef %nbatch, i32 noundef %lds_padding, ptr addrspace(1) noalias nocapture noundef readnone %load_cb_fn.coerce, ptr addrspace(1) noalias nocapture noundef readnone %load_cb_data.coerce, i32 noundef %load_cb_lds_bytes, ptr addrspace(1) noalias nocapture noundef readnone %store_cb_fn.coerce, ptr addrspace(1) noalias nocapture noundef readnone %store_cb_data.coerce, ptr addrspace(1) noalias noundef %buf_in.coerce, ptr addrspace(1) noalias noundef %buf_out.coerce) local_unnamed_addr #1 {
entry:
  %0 = load i64, ptr addrspace(1) %stride_in.coerce, align 8, !tbaa !6, !amdgpu.noclobber !10
  %1 = load i64, ptr addrspace(1) %stride_out.coerce, align 8, !tbaa !6, !amdgpu.noclobber !10
  %arrayidx14 = getelementptr inbounds i8, ptr addrspace(1) %lengths.coerce, i64 8
  %2 = load i64, ptr addrspace(1) %arrayidx14, align 8, !tbaa !6
  %sub = add i64 %2, -1
  %div128 = lshr i64 %sub, 4
  %add = add nuw nsw i64 %div128, 1
  %3 = tail call noundef i32 @llvm.amdgcn.workgroup.id.x()
  %conv = zext i32 %3 to i64
  %add.frozen = freeze i64 %add
  %div18 = udiv i64 %conv, %add.frozen
  %4 = mul i64 %div18, %add.frozen
  %rem.decomposed = sub i64 %conv, %4
  %mul = shl nuw nsw i64 %rem.decomposed, 4
  %arrayidx19 = getelementptr inbounds i8, ptr addrspace(1) %stride_in.coerce, i64 8
  %5 = load i64, ptr addrspace(1) %arrayidx19, align 8, !tbaa !6
  %mul20 = mul i64 %5, %mul
  %arrayidx22 = getelementptr inbounds i8, ptr addrspace(1) %stride_out.coerce, i64 8
  %6 = load i64, ptr addrspace(1) %arrayidx22, align 8, !tbaa !6
  %mul23 = mul i64 %6, %mul
  %cmp285 = icmp ugt i64 %dim, 2
  br i1 %cmp285, label %for.body, label %for.cond.cleanup

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %.pre = udiv i64 %conv, %mul26
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  %div43.pre-phi = phi i64 [ %.pre, %for.cond.cleanup.loopexit ], [ %div18, %entry ]
  %offset_out.0.lcssa = phi i64 [ %add40, %for.cond.cleanup.loopexit ], [ %mul23, %entry ]
  %offset_in.0.lcssa = phi i64 [ %add36, %for.cond.cleanup.loopexit ], [ %mul20, %entry ]
  %7 = addrspacecast ptr addrspace(1) %buf_out.coerce to ptr
  %8 = addrspacecast ptr addrspace(1) %buf_in.coerce to ptr
  %arrayidx44 = getelementptr inbounds i64, ptr addrspace(1) %stride_in.coerce, i64 %dim
  %9 = load i64, ptr addrspace(1) %arrayidx44, align 8, !tbaa !6, !amdgpu.noclobber !10
  %mul45 = mul i64 %9, %div43.pre-phi
  %add46 = add i64 %mul45, %offset_in.0.lcssa
  %arrayidx47 = getelementptr inbounds i64, ptr addrspace(1) %stride_out.coerce, i64 %dim
  %10 = load i64, ptr addrspace(1) %arrayidx47, align 8, !tbaa !6, !amdgpu.noclobber !10
  %mul48 = mul i64 %10, %div43.pre-phi
  %add49 = add i64 %mul48, %offset_out.0.lcssa
  %11 = tail call noundef range(i32 0, 1024) i32 @llvm.amdgcn.workitem.id.x(), !range !11, !noundef !10
  %rem52 = and i32 %11, 15
  %conv53 = zext nneg i32 %rem52 to i64
  %add54 = or disjoint i64 %mul, %conv53
  %mul60 = add nuw nsw i64 %mul, 16
  %cmp62.not = icmp ule i64 %mul60, %2
  %div64129 = lshr i32 %11, 4
  %mul69 = mul i64 %5, %conv53
  %conv73 = zext nneg i32 %div64129 to i64
  %mul74 = mul i64 %0, %conv73
  %add75 = add i64 %mul69, %mul74
  %conv76 = trunc i64 %add75 to i32
  %conv77 = trunc i64 %add46 to i32
  %cmp82 = icmp ult i64 %add54, %2
  %spec.select = select i1 %cmp62.not, i1 true, i1 %cmp82
  %mul.i = shl i32 %conv76, 4
  %mul3.i = shl i32 %conv77, 4
  %cond.i.i = select i1 %spec.select, i32 %mul.i, i32 -1
  %12 = ptrtoint ptr %8 to i64
  %buffer_rsc.i.sroa.0.0.extract.trunc.i = trunc i64 %12 to i32
  %13 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i)
  %ret.sroa.0.0.vec.insert.i.i.i = insertelement <4 x i32> poison, i32 %13, i64 0
  %buffer_rsc.i.sroa.0.4.extract.shift.i = lshr i64 %12, 32
  %buffer_rsc.i.sroa.0.4.extract.trunc.i = trunc nuw i64 %buffer_rsc.i.sroa.0.4.extract.shift.i to i32
  %14 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i)
  %ret.sroa.0.4.vec.insert.i.i.i = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i.i, i32 %14, i64 1
  %ret.sroa.0.8.vecblend.i.i.i = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i.i, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %15 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul3.i)
  %call2.i.i = tail call contract noundef <4 x float> @llvm.amdgcn.raw.buffer.load.v4f32(<4 x i32> noundef %ret.sroa.0.8.vecblend.i.i.i, i32 noundef %cond.i.i, i32 noundef %15, i32 noundef 0) #7
  %bc.i.i = bitcast <4 x float> %call2.i.i to <2 x double>
  %16 = extractelement <2 x double> %bc.i.i, i64 0
  %17 = extractelement <2 x double> %bc.i.i, i64 1
  %add91 = add nuw nsw i32 %div64129, 25
  %conv92 = zext nneg i32 %add91 to i64
  %mul93 = mul i64 %0, %conv92
  %add94 = add i64 %mul69, %mul93
  %conv95 = trunc i64 %add94 to i32
  %mul.i131 = shl i32 %conv95, 4
  %cond.i.i133 = select i1 %spec.select, i32 %mul.i131, i32 -1
  %18 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i)
  %ret.sroa.0.0.vec.insert.i.i.i135 = insertelement <4 x i32> poison, i32 %18, i64 0
  %19 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i)
  %ret.sroa.0.4.vec.insert.i.i.i138 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i.i135, i32 %19, i64 1
  %ret.sroa.0.8.vecblend.i.i.i139 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i.i138, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %20 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul3.i)
  %call2.i.i140 = tail call contract noundef <4 x float> @llvm.amdgcn.raw.buffer.load.v4f32(<4 x i32> noundef %ret.sroa.0.8.vecblend.i.i.i139, i32 noundef %cond.i.i133, i32 noundef %20, i32 noundef 0) #7
  %bc.i.i141 = bitcast <4 x float> %call2.i.i140 to <2 x double>
  %21 = extractelement <2 x double> %bc.i.i141, i64 0
  %22 = extractelement <2 x double> %bc.i.i141, i64 1
  %add113 = add nuw nsw i32 %div64129, 50
  %conv114 = zext nneg i32 %add113 to i64
  %mul115 = mul i64 %0, %conv114
  %add116 = add i64 %mul69, %mul115
  %conv117 = trunc i64 %add116 to i32
  %mul.i144 = shl i32 %conv117, 4
  %cond.i.i146 = select i1 %spec.select, i32 %mul.i144, i32 -1
  %23 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i)
  %ret.sroa.0.0.vec.insert.i.i.i148 = insertelement <4 x i32> poison, i32 %23, i64 0
  %24 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i)
  %ret.sroa.0.4.vec.insert.i.i.i151 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i.i148, i32 %24, i64 1
  %ret.sroa.0.8.vecblend.i.i.i152 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i.i151, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %25 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul3.i)
  %call2.i.i153 = tail call contract noundef <4 x float> @llvm.amdgcn.raw.buffer.load.v4f32(<4 x i32> noundef %ret.sroa.0.8.vecblend.i.i.i152, i32 noundef %cond.i.i146, i32 noundef %25, i32 noundef 0) #7
  %bc.i.i154 = bitcast <4 x float> %call2.i.i153 to <2 x double>
  %26 = extractelement <2 x double> %bc.i.i154, i64 0
  %27 = extractelement <2 x double> %bc.i.i154, i64 1
  %add135 = add nuw nsw i32 %div64129, 75
  %conv136 = zext nneg i32 %add135 to i64
  %mul137 = mul i64 %0, %conv136
  %add138 = add i64 %mul69, %mul137
  %conv139 = trunc i64 %add138 to i32
  %mul.i157 = shl i32 %conv139, 4
  %cond.i.i159 = select i1 %spec.select, i32 %mul.i157, i32 -1
  %28 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i)
  %ret.sroa.0.0.vec.insert.i.i.i161 = insertelement <4 x i32> poison, i32 %28, i64 0
  %29 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i)
  %ret.sroa.0.4.vec.insert.i.i.i164 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i.i161, i32 %29, i64 1
  %ret.sroa.0.8.vecblend.i.i.i165 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i.i164, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %30 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul3.i)
  %call2.i.i166 = tail call contract noundef <4 x float> @llvm.amdgcn.raw.buffer.load.v4f32(<4 x i32> noundef %ret.sroa.0.8.vecblend.i.i.i165, i32 noundef %cond.i.i159, i32 noundef %30, i32 noundef 0) #7
  %bc.i.i167 = bitcast <4 x float> %call2.i.i166 to <2 x double>
  %31 = extractelement <2 x double> %bc.i.i167, i64 0
  %32 = extractelement <2 x double> %bc.i.i167, i64 1
  %add157 = add nuw nsw i32 %div64129, 100
  %conv158 = zext nneg i32 %add157 to i64
  %mul159 = mul i64 %0, %conv158
  %add160 = add i64 %mul69, %mul159
  %conv161 = trunc i64 %add160 to i32
  %mul.i170 = shl i32 %conv161, 4
  %cond.i.i172 = select i1 %spec.select, i32 %mul.i170, i32 -1
  %33 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i)
  %ret.sroa.0.0.vec.insert.i.i.i174 = insertelement <4 x i32> poison, i32 %33, i64 0
  %34 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i)
  %ret.sroa.0.4.vec.insert.i.i.i177 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i.i174, i32 %34, i64 1
  %ret.sroa.0.8.vecblend.i.i.i178 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i.i177, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %35 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul3.i)
  %call2.i.i179 = tail call contract noundef <4 x float> @llvm.amdgcn.raw.buffer.load.v4f32(<4 x i32> noundef %ret.sroa.0.8.vecblend.i.i.i178, i32 noundef %cond.i.i172, i32 noundef %35, i32 noundef 0) #7
  %bc.i.i180 = bitcast <4 x float> %call2.i.i179 to <2 x double>
  %36 = extractelement <2 x double> %bc.i.i180, i64 0
  %37 = extractelement <2 x double> %bc.i.i180, i64 1
  tail call void @llvm.experimental.noalias.scope.decl(metadata !12)
  %add.i.i = fadd contract double %16, %21
  %add3.i.i = fadd contract double %add.i.i, %26
  %add5.i.i = fadd contract double %add3.i.i, %31
  %add7.i.i = fadd contract double %add5.i.i, %36
  %add11.i.i = fadd contract double %26, %31
  %mul.i.i = fmul contract double %add11.i.i, 5.000000e-01
  %sub.i.i = fsub contract double %16, %mul.i.i
  %sub13.i.i = fsub contract double %22, %37
  %mul14.i.i = fmul contract double %sub13.i.i, 0x3FEE6F0E134454FF
  %sub15.i.i = fsub contract double %sub.i.i, %mul14.i.i
  %sub18.i.i = fsub contract double %27, %32
  %mul19.i.i = fmul contract double %sub18.i.i, 0x3FE2CF2304755A5E
  %sub20.i.i = fsub contract double %sub15.i.i, %mul19.i.i
  %sub23.i.i = fsub contract double %21, %26
  %sub26.i.i = fsub contract double %36, %31
  %add27.i.i = fadd contract double %sub23.i.i, %sub26.i.i
  %mul28.i.i = fmul contract double %add27.i.i, 0x3FD3C6EF372FE950
  %add29.i.i = fadd contract double %mul28.i.i, %sub20.i.i
  %add40.i.i = fadd contract double %sub.i.i, %mul14.i.i
  %add45.i.i = fadd contract double %mul19.i.i, %add40.i.i
  %add54.i.i = fadd contract double %mul28.i.i, %add45.i.i
  %add58.i.i = fadd contract double %21, %36
  %mul59.i.i = fmul contract double %add58.i.i, 5.000000e-01
  %sub60.i.i = fsub contract double %16, %mul59.i.i
  %mul64.i.i = fmul contract double %sub18.i.i, 0x3FEE6F0E134454FF
  %add65.i.i = fadd contract double %mul64.i.i, %sub60.i.i
  %mul69.i.i = fmul contract double %sub13.i.i, 0x3FE2CF2304755A5E
  %sub70.i.i = fsub contract double %add65.i.i, %mul69.i.i
  %sub73.i.i = fsub contract double %26, %21
  %sub76.i.i = fsub contract double %31, %36
  %add77.i.i = fadd contract double %sub73.i.i, %sub76.i.i
  %mul78.i.i = fmul contract double %add77.i.i, 0x3FD3C6EF372FE950
  %add79.i.i = fadd contract double %mul78.i.i, %sub70.i.i
  %sub90.i.i = fsub contract double %sub60.i.i, %mul64.i.i
  %add95.i.i = fadd contract double %mul69.i.i, %sub90.i.i
  %add104.i.i = fadd contract double %mul78.i.i, %add95.i.i
  %add107.i.i = fadd contract double %17, %22
  %add109.i.i = fadd contract double %add107.i.i, %27
  %add111.i.i = fadd contract double %add109.i.i, %32
  %add113.i.i = fadd contract double %add111.i.i, %37
  %add117.i.i = fadd contract double %27, %32
  %mul118.i.i = fmul contract double %add117.i.i, 5.000000e-01
  %sub119.i.i = fsub contract double %17, %mul118.i.i
  %sub122.i.i = fsub contract double %21, %36
  %mul123.i.i = fmul contract double %sub122.i.i, 0x3FEE6F0E134454FF
  %add124.i.i = fadd contract double %sub119.i.i, %mul123.i.i
  %sub127.i.i = fsub contract double %26, %31
  %mul128.i.i = fmul contract double %sub127.i.i, 0x3FE2CF2304755A5E
  %add129.i.i = fadd contract double %mul128.i.i, %add124.i.i
  %sub132.i.i = fsub contract double %22, %27
  %sub135.i.i = fsub contract double %37, %32
  %add136.i.i = fadd contract double %sub132.i.i, %sub135.i.i
  %mul137.i.i = fmul contract double %add136.i.i, 0x3FD3C6EF372FE950
  %add138.i.i = fadd contract double %mul137.i.i, %add129.i.i
  %sub149.i.i = fsub contract double %sub119.i.i, %mul123.i.i
  %sub154.i.i = fsub contract double %sub149.i.i, %mul128.i.i
  %add163.i.i = fadd contract double %mul137.i.i, %sub154.i.i
  %add167.i.i = fadd contract double %22, %37
  %mul168.i.i = fmul contract double %add167.i.i, 5.000000e-01
  %sub169.i.i = fsub contract double %17, %mul168.i.i
  %mul173.i.i = fmul contract double %sub127.i.i, 0x3FEE6F0E134454FF
  %sub174.i.i = fsub contract double %sub169.i.i, %mul173.i.i
  %mul178.i.i = fmul contract double %sub122.i.i, 0x3FE2CF2304755A5E
  %add179.i.i = fadd contract double %mul178.i.i, %sub174.i.i
  %sub182.i.i = fsub contract double %27, %22
  %sub185.i.i = fsub contract double %32, %37
  %add186.i.i = fadd contract double %sub182.i.i, %sub185.i.i
  %mul187.i.i = fmul contract double %add186.i.i, 0x3FD3C6EF372FE950
  %add188.i.i = fadd contract double %mul187.i.i, %add179.i.i
  %add199.i.i = fadd contract double %mul173.i.i, %sub169.i.i
  %sub204.i.i = fsub contract double %add199.i.i, %mul178.i.i
  %add213.i.i = fadd contract double %mul187.i.i, %sub204.i.i
  %mul10.i = mul nuw nsw i32 %div64129, 80
  %38 = getelementptr %struct.rocfft_complex, ptr addrspace(3) @lds_uchar, i32 %mul10.i
  %arrayidx12.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %38, i32 %rem52
  store double %add7.i.i, ptr addrspace(3) %arrayidx12.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.15.0.arrayidx12.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx12.i, i32 8
  store double %add113.i.i, ptr addrspace(3) %R.sroa.15.0.arrayidx12.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %39 = getelementptr i8, ptr addrspace(3) %38, i32 256
  %arrayidx26.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %39, i32 %rem52
  store double %add29.i.i, ptr addrspace(3) %arrayidx26.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.37.16.arrayidx26.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx26.i, i32 8
  store double %add138.i.i, ptr addrspace(3) %R.sroa.37.16.arrayidx26.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %40 = getelementptr i8, ptr addrspace(3) %38, i32 512
  %arrayidx40.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %40, i32 %rem52
  store double %add79.i.i, ptr addrspace(3) %arrayidx40.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.59.32.arrayidx40.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx40.i, i32 8
  store double %add188.i.i, ptr addrspace(3) %R.sroa.59.32.arrayidx40.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %41 = getelementptr i8, ptr addrspace(3) %38, i32 768
  %arrayidx54.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %41, i32 %rem52
  store double %add104.i.i, ptr addrspace(3) %arrayidx54.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.81.48.arrayidx54.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx54.i, i32 8
  store double %add213.i.i, ptr addrspace(3) %R.sroa.81.48.arrayidx54.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %42 = getelementptr i8, ptr addrspace(3) %38, i32 1024
  %arrayidx68.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %42, i32 %rem52
  store double %add54.i.i, ptr addrspace(3) %arrayidx68.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.104.64.arrayidx68.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx68.i, i32 8
  store double %add163.i.i, ptr addrspace(3) %R.sroa.104.64.arrayidx68.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier(), !noalias !12
  fence syncscope("workgroup") acquire
  %mul72.i = and i32 %11, 1008
  %43 = getelementptr %struct.rocfft_complex, ptr addrspace(3) @lds_uchar, i32 %mul72.i
  %arrayidx75.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %43, i32 %rem52
  %R.sroa.0.0.copyload227 = load double, ptr addrspace(3) %arrayidx75.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.15.0.arrayidx75.i.sroa_idx230 = getelementptr inbounds i8, ptr addrspace(3) %arrayidx75.i, i32 8
  %R.sroa.15.0.copyload231 = load double, ptr addrspace(3) %R.sroa.15.0.arrayidx75.i.sroa_idx230, align 8, !tbaa !15, !noalias !12
  %44 = getelementptr i8, ptr addrspace(3) %43, i32 6400
  %arrayidx83.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %44, i32 %rem52
  %R.sroa.24.16.copyload238 = load double, ptr addrspace(3) %arrayidx83.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.37.16.arrayidx83.i.sroa_idx241 = getelementptr inbounds i8, ptr addrspace(3) %arrayidx83.i, i32 8
  %R.sroa.37.16.copyload242 = load double, ptr addrspace(3) %R.sroa.37.16.arrayidx83.i.sroa_idx241, align 8, !tbaa !15, !noalias !12
  %45 = getelementptr i8, ptr addrspace(3) %43, i32 12800
  %arrayidx91.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %45, i32 %rem52
  %R.sroa.46.32.copyload249 = load double, ptr addrspace(3) %arrayidx91.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.59.32.arrayidx91.i.sroa_idx252 = getelementptr inbounds i8, ptr addrspace(3) %arrayidx91.i, i32 8
  %R.sroa.59.32.copyload253 = load double, ptr addrspace(3) %R.sroa.59.32.arrayidx91.i.sroa_idx252, align 8, !tbaa !15, !noalias !12
  %46 = getelementptr i8, ptr addrspace(3) %43, i32 19200
  %arrayidx99.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %46, i32 %rem52
  %R.sroa.68.48.copyload260 = load double, ptr addrspace(3) %arrayidx99.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.81.48.arrayidx99.i.sroa_idx263 = getelementptr inbounds i8, ptr addrspace(3) %arrayidx99.i, i32 8
  %R.sroa.81.48.copyload264 = load double, ptr addrspace(3) %R.sroa.81.48.arrayidx99.i.sroa_idx263, align 8, !tbaa !15, !noalias !12
  %47 = getelementptr i8, ptr addrspace(3) %43, i32 25600
  %arrayidx107.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %47, i32 %rem52
  %R.sroa.91.64.copyload272 = load double, ptr addrspace(3) %arrayidx107.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.104.64.arrayidx107.i.sroa_idx275 = getelementptr inbounds i8, ptr addrspace(3) %arrayidx107.i, i32 8
  %R.sroa.104.64.copyload276 = load double, ptr addrspace(3) %R.sroa.104.64.arrayidx107.i.sroa_idx275, align 8, !tbaa !15, !noalias !12
  %rem111.i.lhs.trunc = trunc nuw nsw i32 %div64129 to i8
  %div220.i282 = udiv i8 %rem111.i.lhs.trunc, 5
  %48 = mul i8 %div220.i282, 5
  %rem111.i281.decomposed = sub i8 %rem111.i.lhs.trunc, %48
  %rem111.i.zext = zext nneg i8 %rem111.i281.decomposed to i32
  %mul112.i = shl nuw nsw i32 %rem111.i.zext, 2
  %idxprom114.i = zext nneg i32 %mul112.i to i64
  %arrayidx115.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %twiddles.coerce, i64 %idxprom114.i
  %W.sroa.0.0.copyload.i = load double, ptr addrspace(1) %arrayidx115.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx115.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx115.i, i64 8
  %W.sroa.41.0.copyload.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx115.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul118.i = fmul contract double %R.sroa.24.16.copyload238, %W.sroa.0.0.copyload.i
  %mul121.i = fmul contract double %R.sroa.37.16.copyload242, %W.sroa.41.0.copyload.i
  %add122.i = fadd contract double %mul118.i, %mul121.i
  %mul126.i = fmul contract double %R.sroa.37.16.copyload242, %W.sroa.0.0.copyload.i
  %mul130.i = fmul contract double %R.sroa.24.16.copyload238, %W.sroa.41.0.copyload.i
  %sub.i = fsub contract double %mul126.i, %mul130.i
  %add136.i = or disjoint i32 %mul112.i, 1
  %idxprom137.i = zext nneg i32 %add136.i to i64
  %arrayidx138.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %twiddles.coerce, i64 %idxprom137.i
  %W.sroa.0.0.copyload64.i = load double, ptr addrspace(1) %arrayidx138.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx138.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx138.i, i64 8
  %W.sroa.41.0.copyload71.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx138.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul143.i = fmul contract double %R.sroa.46.32.copyload249, %W.sroa.0.0.copyload64.i
  %mul147.i = fmul contract double %R.sroa.59.32.copyload253, %W.sroa.41.0.copyload71.i
  %add148.i = fadd contract double %mul143.i, %mul147.i
  %mul152.i = fmul contract double %R.sroa.59.32.copyload253, %W.sroa.0.0.copyload64.i
  %mul156.i = fmul contract double %R.sroa.46.32.copyload249, %W.sroa.41.0.copyload71.i
  %sub157.i = fsub contract double %mul152.i, %mul156.i
  %add163.i = or disjoint i32 %mul112.i, 2
  %idxprom164.i = zext nneg i32 %add163.i to i64
  %arrayidx165.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %twiddles.coerce, i64 %idxprom164.i
  %W.sroa.0.0.copyload65.i = load double, ptr addrspace(1) %arrayidx165.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx165.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx165.i, i64 8
  %W.sroa.41.0.copyload72.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx165.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul170.i = fmul contract double %R.sroa.68.48.copyload260, %W.sroa.0.0.copyload65.i
  %mul174.i = fmul contract double %R.sroa.81.48.copyload264, %W.sroa.41.0.copyload72.i
  %add175.i = fadd contract double %mul170.i, %mul174.i
  %mul179.i = fmul contract double %R.sroa.81.48.copyload264, %W.sroa.0.0.copyload65.i
  %mul183.i = fmul contract double %R.sroa.68.48.copyload260, %W.sroa.41.0.copyload72.i
  %sub184.i = fsub contract double %mul179.i, %mul183.i
  %add190.i = or disjoint i32 %mul112.i, 3
  %idxprom191.i = zext nneg i32 %add190.i to i64
  %arrayidx192.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %twiddles.coerce, i64 %idxprom191.i
  %W.sroa.0.0.copyload66.i = load double, ptr addrspace(1) %arrayidx192.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx192.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx192.i, i64 8
  %W.sroa.41.0.copyload73.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx192.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul197.i = fmul contract double %R.sroa.91.64.copyload272, %W.sroa.0.0.copyload66.i
  %mul201.i = fmul contract double %R.sroa.104.64.copyload276, %W.sroa.41.0.copyload73.i
  %add202.i = fadd contract double %mul197.i, %mul201.i
  %mul206.i = fmul contract double %R.sroa.104.64.copyload276, %W.sroa.0.0.copyload66.i
  %mul210.i = fmul contract double %R.sroa.91.64.copyload272, %W.sroa.41.0.copyload73.i
  %sub211.i = fsub contract double %mul206.i, %mul210.i
  %add.i301.i = fadd contract double %R.sroa.0.0.copyload227, %add122.i
  %add3.i302.i = fadd contract double %add.i301.i, %add148.i
  %add5.i303.i = fadd contract double %add3.i302.i, %add175.i
  %add7.i304.i = fadd contract double %add5.i303.i, %add202.i
  %add11.i305.i = fadd contract double %add148.i, %add175.i
  %mul.i306.i = fmul contract double %add11.i305.i, 5.000000e-01
  %sub.i307.i = fsub contract double %R.sroa.0.0.copyload227, %mul.i306.i
  %sub13.i310.i = fsub contract double %sub.i, %sub211.i
  %mul14.i311.i = fmul contract double %sub13.i310.i, 0x3FEE6F0E134454FF
  %sub15.i312.i = fsub contract double %sub.i307.i, %mul14.i311.i
  %sub18.i315.i = fsub contract double %sub157.i, %sub184.i
  %mul19.i316.i = fmul contract double %sub18.i315.i, 0x3FE2CF2304755A5E
  %sub20.i317.i = fsub contract double %sub15.i312.i, %mul19.i316.i
  %sub23.i318.i = fsub contract double %add122.i, %add148.i
  %sub26.i319.i = fsub contract double %add202.i, %add175.i
  %add27.i320.i = fadd contract double %sub23.i318.i, %sub26.i319.i
  %mul28.i321.i = fmul contract double %add27.i320.i, 0x3FD3C6EF372FE950
  %add29.i322.i = fadd contract double %mul28.i321.i, %sub20.i317.i
  %add40.i323.i = fadd contract double %sub.i307.i, %mul14.i311.i
  %add45.i324.i = fadd contract double %mul19.i316.i, %add40.i323.i
  %add54.i325.i = fadd contract double %mul28.i321.i, %add45.i324.i
  %add58.i326.i = fadd contract double %add122.i, %add202.i
  %mul59.i327.i = fmul contract double %add58.i326.i, 5.000000e-01
  %sub60.i328.i = fsub contract double %R.sroa.0.0.copyload227, %mul59.i327.i
  %mul64.i329.i = fmul contract double %sub18.i315.i, 0x3FEE6F0E134454FF
  %add65.i330.i = fadd contract double %mul64.i329.i, %sub60.i328.i
  %mul69.i331.i = fmul contract double %sub13.i310.i, 0x3FE2CF2304755A5E
  %sub70.i332.i = fsub contract double %add65.i330.i, %mul69.i331.i
  %sub73.i333.i = fsub contract double %add148.i, %add122.i
  %sub76.i334.i = fsub contract double %add175.i, %add202.i
  %add77.i335.i = fadd contract double %sub73.i333.i, %sub76.i334.i
  %mul78.i336.i = fmul contract double %add77.i335.i, 0x3FD3C6EF372FE950
  %add79.i337.i = fadd contract double %mul78.i336.i, %sub70.i332.i
  %sub90.i338.i = fsub contract double %sub60.i328.i, %mul64.i329.i
  %add95.i339.i = fadd contract double %mul69.i331.i, %sub90.i338.i
  %add104.i340.i = fadd contract double %mul78.i336.i, %add95.i339.i
  %add107.i342.i = fadd contract double %R.sroa.15.0.copyload231, %sub.i
  %add109.i343.i = fadd contract double %add107.i342.i, %sub157.i
  %add111.i344.i = fadd contract double %add109.i343.i, %sub184.i
  %add113.i345.i = fadd contract double %add111.i344.i, %sub211.i
  %add117.i346.i = fadd contract double %sub157.i, %sub184.i
  %mul118.i347.i = fmul contract double %add117.i346.i, 5.000000e-01
  %sub119.i348.i = fsub contract double %R.sroa.15.0.copyload231, %mul118.i347.i
  %sub122.i349.i = fsub contract double %add122.i, %add202.i
  %mul123.i350.i = fmul contract double %sub122.i349.i, 0x3FEE6F0E134454FF
  %add124.i351.i = fadd contract double %sub119.i348.i, %mul123.i350.i
  %sub127.i352.i = fsub contract double %add148.i, %add175.i
  %mul128.i353.i = fmul contract double %sub127.i352.i, 0x3FE2CF2304755A5E
  %add129.i354.i = fadd contract double %mul128.i353.i, %add124.i351.i
  %sub132.i355.i = fsub contract double %sub.i, %sub157.i
  %sub135.i356.i = fsub contract double %sub211.i, %sub184.i
  %add136.i357.i = fadd contract double %sub132.i355.i, %sub135.i356.i
  %mul137.i358.i = fmul contract double %add136.i357.i, 0x3FD3C6EF372FE950
  %add138.i359.i = fadd contract double %mul137.i358.i, %add129.i354.i
  %sub149.i360.i = fsub contract double %sub119.i348.i, %mul123.i350.i
  %sub154.i361.i = fsub contract double %sub149.i360.i, %mul128.i353.i
  %add163.i362.i = fadd contract double %mul137.i358.i, %sub154.i361.i
  %add167.i363.i = fadd contract double %sub.i, %sub211.i
  %mul168.i364.i = fmul contract double %add167.i363.i, 5.000000e-01
  %sub169.i365.i = fsub contract double %R.sroa.15.0.copyload231, %mul168.i364.i
  %mul173.i366.i = fmul contract double %sub127.i352.i, 0x3FEE6F0E134454FF
  %sub174.i367.i = fsub contract double %sub169.i365.i, %mul173.i366.i
  %mul178.i368.i = fmul contract double %sub122.i349.i, 0x3FE2CF2304755A5E
  %add179.i369.i = fadd contract double %mul178.i368.i, %sub174.i367.i
  %sub182.i370.i = fsub contract double %sub157.i, %sub.i
  %sub185.i371.i = fsub contract double %sub184.i, %sub211.i
  %add186.i372.i = fadd contract double %sub182.i370.i, %sub185.i371.i
  %mul187.i373.i = fmul contract double %add186.i372.i, 0x3FD3C6EF372FE950
  %add188.i374.i = fadd contract double %mul187.i373.i, %add179.i369.i
  %add199.i375.i = fadd contract double %mul173.i366.i, %sub169.i365.i
  %sub204.i376.i = fsub contract double %add199.i375.i, %mul178.i368.i
  %add213.i377.i = fadd contract double %mul187.i373.i, %sub204.i376.i
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier(), !noalias !12
  fence syncscope("workgroup") acquire
  %div220.i.zext = zext nneg i8 %div220.i282 to i32
  %mul221.i = mul nuw nsw i32 %div220.i.zext, 25
  %add225.i = add nuw nsw i32 %mul221.i, %rem111.i.zext
  %mul227.i = shl nuw nsw i32 %add225.i, 4
  %49 = getelementptr %struct.rocfft_complex, ptr addrspace(3) @lds_uchar, i32 %mul227.i
  %arrayidx231.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %49, i32 %rem52
  store double %add7.i304.i, ptr addrspace(3) %arrayidx231.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.15.0.arrayidx231.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx231.i, i32 8
  store double %add113.i345.i, ptr addrspace(3) %R.sroa.15.0.arrayidx231.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %50 = getelementptr i8, ptr addrspace(3) %49, i32 1280
  %arrayidx245.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %50, i32 %rem52
  store double %add29.i322.i, ptr addrspace(3) %arrayidx245.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.37.16.arrayidx245.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx245.i, i32 8
  store double %add138.i359.i, ptr addrspace(3) %R.sroa.37.16.arrayidx245.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %51 = getelementptr i8, ptr addrspace(3) %49, i32 2560
  %arrayidx259.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %51, i32 %rem52
  store double %add79.i337.i, ptr addrspace(3) %arrayidx259.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.59.32.arrayidx259.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx259.i, i32 8
  store double %add188.i374.i, ptr addrspace(3) %R.sroa.59.32.arrayidx259.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %52 = getelementptr i8, ptr addrspace(3) %49, i32 3840
  %arrayidx273.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %52, i32 %rem52
  store double %add104.i340.i, ptr addrspace(3) %arrayidx273.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.81.48.arrayidx273.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx273.i, i32 8
  store double %add213.i377.i, ptr addrspace(3) %R.sroa.81.48.arrayidx273.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  %53 = getelementptr i8, ptr addrspace(3) %49, i32 5120
  %arrayidx287.i = getelementptr %struct.rocfft_complex, ptr addrspace(3) %53, i32 %rem52
  store double %add54.i325.i, ptr addrspace(3) %arrayidx287.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.104.64.arrayidx287.i.sroa_idx = getelementptr inbounds i8, ptr addrspace(3) %arrayidx287.i, i32 8
  store double %add163.i362.i, ptr addrspace(3) %R.sroa.104.64.arrayidx287.i.sroa_idx, align 8, !tbaa !15, !noalias !12
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier(), !noalias !12
  fence syncscope("workgroup") acquire
  %R.sroa.0.0.copyload = load double, ptr addrspace(3) %arrayidx75.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.15.0.copyload = load double, ptr addrspace(3) %R.sroa.15.0.arrayidx75.i.sroa_idx230, align 8, !tbaa !15, !noalias !12
  %R.sroa.24.16.copyload = load double, ptr addrspace(3) %arrayidx83.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.37.16.copyload = load double, ptr addrspace(3) %R.sroa.37.16.arrayidx83.i.sroa_idx241, align 8, !tbaa !15, !noalias !12
  %R.sroa.46.32.copyload = load double, ptr addrspace(3) %arrayidx91.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.59.32.copyload = load double, ptr addrspace(3) %R.sroa.59.32.arrayidx91.i.sroa_idx252, align 8, !tbaa !15, !noalias !12
  %R.sroa.68.48.copyload = load double, ptr addrspace(3) %arrayidx99.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.81.48.copyload = load double, ptr addrspace(3) %R.sroa.81.48.arrayidx99.i.sroa_idx263, align 8, !tbaa !15, !noalias !12
  %R.sroa.91.64.copyload = load double, ptr addrspace(3) %arrayidx107.i, align 16, !tbaa !15, !noalias !12
  %R.sroa.104.64.copyload = load double, ptr addrspace(3) %R.sroa.104.64.arrayidx107.i.sroa_idx275, align 8, !tbaa !15, !noalias !12
  %rem330.i283 = urem i8 %rem111.i.lhs.trunc, 25
  %rem330.i.zext = zext nneg i8 %rem330.i283 to i32
  %mul331.i = shl nuw nsw i32 %rem330.i.zext, 2
  %54 = zext nneg i32 %mul331.i to i64
  %55 = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %twiddles.coerce, i64 %54
  %arrayidx334.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 320
  %W.sroa.0.0.copyload67.i = load double, ptr addrspace(1) %arrayidx334.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx334.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 328
  %W.sroa.41.0.copyload74.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx334.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul339.i = fmul contract double %R.sroa.24.16.copyload, %W.sroa.0.0.copyload67.i
  %mul343.i = fmul contract double %R.sroa.37.16.copyload, %W.sroa.41.0.copyload74.i
  %add344.i = fadd contract double %mul339.i, %mul343.i
  %mul348.i = fmul contract double %R.sroa.37.16.copyload, %W.sroa.0.0.copyload67.i
  %mul352.i = fmul contract double %R.sroa.24.16.copyload, %W.sroa.41.0.copyload74.i
  %sub353.i = fsub contract double %mul348.i, %mul352.i
  %arrayidx361.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 336
  %W.sroa.0.0.copyload68.i = load double, ptr addrspace(1) %arrayidx361.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx361.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 344
  %W.sroa.41.0.copyload75.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx361.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul366.i = fmul contract double %R.sroa.46.32.copyload, %W.sroa.0.0.copyload68.i
  %mul370.i = fmul contract double %R.sroa.59.32.copyload, %W.sroa.41.0.copyload75.i
  %add371.i = fadd contract double %mul366.i, %mul370.i
  %mul375.i = fmul contract double %R.sroa.59.32.copyload, %W.sroa.0.0.copyload68.i
  %mul379.i = fmul contract double %R.sroa.46.32.copyload, %W.sroa.41.0.copyload75.i
  %sub380.i = fsub contract double %mul375.i, %mul379.i
  %arrayidx388.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 352
  %W.sroa.0.0.copyload69.i = load double, ptr addrspace(1) %arrayidx388.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx388.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 360
  %W.sroa.41.0.copyload76.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx388.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul393.i = fmul contract double %R.sroa.68.48.copyload, %W.sroa.0.0.copyload69.i
  %mul397.i = fmul contract double %R.sroa.81.48.copyload, %W.sroa.41.0.copyload76.i
  %add398.i = fadd contract double %mul393.i, %mul397.i
  %mul402.i = fmul contract double %R.sroa.81.48.copyload, %W.sroa.0.0.copyload69.i
  %mul406.i = fmul contract double %R.sroa.68.48.copyload, %W.sroa.41.0.copyload76.i
  %sub407.i = fsub contract double %mul402.i, %mul406.i
  %arrayidx415.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 368
  %W.sroa.0.0.copyload70.i = load double, ptr addrspace(1) %arrayidx415.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %W.sroa.41.0.arrayidx415.sroa_idx.i = getelementptr inbounds i8, ptr addrspace(1) %55, i64 376
  %W.sroa.41.0.copyload77.i = load double, ptr addrspace(1) %W.sroa.41.0.arrayidx415.sroa_idx.i, align 8, !tbaa !15, !alias.scope !12, !amdgpu.noclobber !10
  %mul420.i = fmul contract double %R.sroa.91.64.copyload, %W.sroa.0.0.copyload70.i
  %mul424.i = fmul contract double %R.sroa.104.64.copyload, %W.sroa.41.0.copyload77.i
  %add425.i = fadd contract double %mul420.i, %mul424.i
  %mul429.i = fmul contract double %R.sroa.104.64.copyload, %W.sroa.0.0.copyload70.i
  %mul433.i = fmul contract double %R.sroa.91.64.copyload, %W.sroa.41.0.copyload77.i
  %sub434.i = fsub contract double %mul429.i, %mul433.i
  %add.i382.i = fadd contract double %R.sroa.0.0.copyload, %add344.i
  %add3.i383.i = fadd contract double %add.i382.i, %add371.i
  %add5.i384.i = fadd contract double %add3.i383.i, %add398.i
  %add7.i385.i = fadd contract double %add5.i384.i, %add425.i
  %add11.i386.i = fadd contract double %add371.i, %add398.i
  %mul.i387.i = fmul contract double %add11.i386.i, 5.000000e-01
  %sub.i388.i = fsub contract double %R.sroa.0.0.copyload, %mul.i387.i
  %sub13.i391.i = fsub contract double %sub353.i, %sub434.i
  %mul14.i392.i = fmul contract double %sub13.i391.i, 0x3FEE6F0E134454FF
  %sub15.i393.i = fsub contract double %sub.i388.i, %mul14.i392.i
  %sub18.i396.i = fsub contract double %sub380.i, %sub407.i
  %mul19.i397.i = fmul contract double %sub18.i396.i, 0x3FE2CF2304755A5E
  %sub20.i398.i = fsub contract double %sub15.i393.i, %mul19.i397.i
  %sub23.i399.i = fsub contract double %add344.i, %add371.i
  %sub26.i400.i = fsub contract double %add425.i, %add398.i
  %add27.i401.i = fadd contract double %sub23.i399.i, %sub26.i400.i
  %mul28.i402.i = fmul contract double %add27.i401.i, 0x3FD3C6EF372FE950
  %add29.i403.i = fadd contract double %mul28.i402.i, %sub20.i398.i
  %add40.i404.i = fadd contract double %sub.i388.i, %mul14.i392.i
  %add45.i405.i = fadd contract double %mul19.i397.i, %add40.i404.i
  %add54.i406.i = fadd contract double %mul28.i402.i, %add45.i405.i
  %add58.i407.i = fadd contract double %add344.i, %add425.i
  %mul59.i408.i = fmul contract double %add58.i407.i, 5.000000e-01
  %sub60.i409.i = fsub contract double %R.sroa.0.0.copyload, %mul59.i408.i
  %mul64.i410.i = fmul contract double %sub18.i396.i, 0x3FEE6F0E134454FF
  %add65.i411.i = fadd contract double %mul64.i410.i, %sub60.i409.i
  %mul69.i412.i = fmul contract double %sub13.i391.i, 0x3FE2CF2304755A5E
  %sub70.i413.i = fsub contract double %add65.i411.i, %mul69.i412.i
  %sub73.i414.i = fsub contract double %add371.i, %add344.i
  %sub76.i415.i = fsub contract double %add398.i, %add425.i
  %add77.i416.i = fadd contract double %sub73.i414.i, %sub76.i415.i
  %mul78.i417.i = fmul contract double %add77.i416.i, 0x3FD3C6EF372FE950
  %add79.i418.i = fadd contract double %mul78.i417.i, %sub70.i413.i
  %sub90.i419.i = fsub contract double %sub60.i409.i, %mul64.i410.i
  %add95.i420.i = fadd contract double %mul69.i412.i, %sub90.i419.i
  %add104.i421.i = fadd contract double %mul78.i417.i, %add95.i420.i
  %add107.i423.i = fadd contract double %R.sroa.15.0.copyload, %sub353.i
  %add109.i424.i = fadd contract double %add107.i423.i, %sub380.i
  %add111.i425.i = fadd contract double %add109.i424.i, %sub407.i
  %add113.i426.i = fadd contract double %add111.i425.i, %sub434.i
  %add117.i427.i = fadd contract double %sub380.i, %sub407.i
  %mul118.i428.i = fmul contract double %add117.i427.i, 5.000000e-01
  %sub119.i429.i = fsub contract double %R.sroa.15.0.copyload, %mul118.i428.i
  %sub122.i430.i = fsub contract double %add344.i, %add425.i
  %mul123.i431.i = fmul contract double %sub122.i430.i, 0x3FEE6F0E134454FF
  %add124.i432.i = fadd contract double %sub119.i429.i, %mul123.i431.i
  %sub127.i433.i = fsub contract double %add371.i, %add398.i
  %mul128.i434.i = fmul contract double %sub127.i433.i, 0x3FE2CF2304755A5E
  %add129.i435.i = fadd contract double %mul128.i434.i, %add124.i432.i
  %sub132.i436.i = fsub contract double %sub353.i, %sub380.i
  %sub135.i437.i = fsub contract double %sub434.i, %sub407.i
  %add136.i438.i = fadd contract double %sub132.i436.i, %sub135.i437.i
  %mul137.i439.i = fmul contract double %add136.i438.i, 0x3FD3C6EF372FE950
  %add138.i440.i = fadd contract double %mul137.i439.i, %add129.i435.i
  %sub149.i441.i = fsub contract double %sub119.i429.i, %mul123.i431.i
  %sub154.i442.i = fsub contract double %sub149.i441.i, %mul128.i434.i
  %add163.i443.i = fadd contract double %mul137.i439.i, %sub154.i442.i
  %add167.i444.i = fadd contract double %sub353.i, %sub434.i
  %mul168.i445.i = fmul contract double %add167.i444.i, 5.000000e-01
  %sub169.i446.i = fsub contract double %R.sroa.15.0.copyload, %mul168.i445.i
  %mul173.i447.i = fmul contract double %sub127.i433.i, 0x3FEE6F0E134454FF
  %sub174.i448.i = fsub contract double %sub169.i446.i, %mul173.i447.i
  %mul178.i449.i = fmul contract double %sub122.i430.i, 0x3FE2CF2304755A5E
  %add179.i450.i = fadd contract double %mul178.i449.i, %sub174.i448.i
  %sub182.i451.i = fsub contract double %sub380.i, %sub353.i
  %sub185.i452.i = fsub contract double %sub407.i, %sub434.i
  %add186.i453.i = fadd contract double %sub182.i451.i, %sub185.i452.i
  %mul187.i454.i = fmul contract double %add186.i453.i, 0x3FD3C6EF372FE950
  %add188.i455.i = fadd contract double %mul187.i454.i, %add179.i450.i
  %add199.i456.i = fadd contract double %mul173.i447.i, %sub169.i446.i
  %sub204.i457.i = fsub contract double %add199.i456.i, %mul178.i449.i
  %add213.i458.i = fadd contract double %mul187.i454.i, %sub204.i457.i
  %conv.i = zext nneg i8 %rem330.i283 to i64
  %mul446.i = mul nuw nsw i64 %add54, %conv.i
  %and.i.i = and i64 %mul446.i, 255
  %arrayidx.i.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %and.i.i
  %retval.sroa.0.0.copyload.i.i = load double, ptr addrspace(1) %arrayidx.i.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %retval.sroa.5.0.arrayidx.sroa_idx.i.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx.i.i, i64 8
  %retval.sroa.5.0.copyload.i.i = load double, ptr addrspace(1) %retval.sroa.5.0.arrayidx.sroa_idx.i.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %shr.i.i = lshr i64 %mul446.i, 8
  %and1.i.i = and i64 %shr.i.i, 255
  %add2.i.i = or disjoint i64 %and1.i.i, 256
  %arrayidx3.i.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %add2.i.i
  %56 = load double, ptr addrspace(1) %arrayidx3.i.i, align 8, !tbaa !17, !noalias !12, !amdgpu.noclobber !10
  %mul5.i.i = fmul contract double %retval.sroa.0.0.copyload.i.i, %56
  %y10.i.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx3.i.i, i64 8
  %57 = load double, ptr addrspace(1) %y10.i.i, align 8, !tbaa !19, !noalias !12, !amdgpu.noclobber !10
  %mul11.i.i = fmul contract double %retval.sroa.5.0.copyload.i.i, %57
  %sub.i459.i = fsub contract double %mul5.i.i, %mul11.i.i
  %mul18.i.i = fmul contract double %retval.sroa.5.0.copyload.i.i, %56
  %mul25.i.i = fmul contract double %retval.sroa.0.0.copyload.i.i, %57
  %add26.i.i = fadd contract double %mul18.i.i, %mul25.i.i
  %mul451.i = fmul contract double %add7.i385.i, %sub.i459.i
  %mul455.i = fmul contract double %add113.i426.i, %add26.i.i
  %add456.i = fadd contract double %mul451.i, %mul455.i
  %mul460.i = fmul contract double %add113.i426.i, %sub.i459.i
  %mul464.i = fmul contract double %add7.i385.i, %add26.i.i
  %sub465.i = fsub contract double %mul460.i, %mul464.i
  %add471.i = add nuw nsw i32 %rem330.i.zext, 25
  %conv472.i = zext nneg i32 %add471.i to i64
  %mul473.i = mul nuw nsw i64 %add54, %conv472.i
  %and.i461.i = and i64 %mul473.i, 255
  %arrayidx.i462.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %and.i461.i
  %retval.sroa.0.0.copyload.i463.i = load double, ptr addrspace(1) %arrayidx.i462.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %retval.sroa.5.0.arrayidx.sroa_idx.i464.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx.i462.i, i64 8
  %retval.sroa.5.0.copyload.i465.i = load double, ptr addrspace(1) %retval.sroa.5.0.arrayidx.sroa_idx.i464.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %shr.i466.i = lshr i64 %mul473.i, 8
  %and1.i467.i = and i64 %shr.i466.i, 255
  %add2.i468.i = or disjoint i64 %and1.i467.i, 256
  %arrayidx3.i469.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %add2.i468.i
  %58 = load double, ptr addrspace(1) %arrayidx3.i469.i, align 8, !tbaa !17, !noalias !12, !amdgpu.noclobber !10
  %mul5.i470.i = fmul contract double %retval.sroa.0.0.copyload.i463.i, %58
  %y10.i471.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx3.i469.i, i64 8
  %59 = load double, ptr addrspace(1) %y10.i471.i, align 8, !tbaa !19, !noalias !12, !amdgpu.noclobber !10
  %mul11.i472.i = fmul contract double %retval.sroa.5.0.copyload.i465.i, %59
  %sub.i473.i = fsub contract double %mul5.i470.i, %mul11.i472.i
  %mul18.i474.i = fmul contract double %retval.sroa.5.0.copyload.i465.i, %58
  %mul25.i475.i = fmul contract double %retval.sroa.0.0.copyload.i463.i, %59
  %add26.i476.i = fadd contract double %mul18.i474.i, %mul25.i475.i
  %mul479.i = fmul contract double %add29.i403.i, %sub.i473.i
  %mul483.i = fmul contract double %add138.i440.i, %add26.i476.i
  %add484.i = fadd contract double %mul479.i, %mul483.i
  %mul488.i = fmul contract double %add138.i440.i, %sub.i473.i
  %mul492.i = fmul contract double %add29.i403.i, %add26.i476.i
  %sub493.i = fsub contract double %mul488.i, %mul492.i
  %add499.i = add nuw nsw i32 %rem330.i.zext, 50
  %conv500.i = zext nneg i32 %add499.i to i64
  %mul501.i = mul nuw nsw i64 %add54, %conv500.i
  %and.i480.i = and i64 %mul501.i, 255
  %arrayidx.i481.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %and.i480.i
  %retval.sroa.0.0.copyload.i482.i = load double, ptr addrspace(1) %arrayidx.i481.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %retval.sroa.5.0.arrayidx.sroa_idx.i483.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx.i481.i, i64 8
  %retval.sroa.5.0.copyload.i484.i = load double, ptr addrspace(1) %retval.sroa.5.0.arrayidx.sroa_idx.i483.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %shr.i485.i = lshr i64 %mul501.i, 8
  %and1.i486.i = and i64 %shr.i485.i, 255
  %add2.i487.i = or disjoint i64 %and1.i486.i, 256
  %arrayidx3.i488.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %add2.i487.i
  %60 = load double, ptr addrspace(1) %arrayidx3.i488.i, align 8, !tbaa !17, !noalias !12, !amdgpu.noclobber !10
  %mul5.i489.i = fmul contract double %retval.sroa.0.0.copyload.i482.i, %60
  %y10.i490.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx3.i488.i, i64 8
  %61 = load double, ptr addrspace(1) %y10.i490.i, align 8, !tbaa !19, !noalias !12, !amdgpu.noclobber !10
  %mul11.i491.i = fmul contract double %retval.sroa.5.0.copyload.i484.i, %61
  %sub.i492.i = fsub contract double %mul5.i489.i, %mul11.i491.i
  %mul18.i493.i = fmul contract double %retval.sroa.5.0.copyload.i484.i, %60
  %mul25.i494.i = fmul contract double %retval.sroa.0.0.copyload.i482.i, %61
  %add26.i495.i = fadd contract double %mul18.i493.i, %mul25.i494.i
  %mul507.i = fmul contract double %add79.i418.i, %sub.i492.i
  %mul511.i = fmul contract double %add188.i455.i, %add26.i495.i
  %add512.i = fadd contract double %mul507.i, %mul511.i
  %mul516.i = fmul contract double %add188.i455.i, %sub.i492.i
  %mul520.i = fmul contract double %add79.i418.i, %add26.i495.i
  %sub521.i = fsub contract double %mul516.i, %mul520.i
  %add527.i = add nuw nsw i32 %rem330.i.zext, 75
  %conv528.i = zext nneg i32 %add527.i to i64
  %mul529.i = mul nuw nsw i64 %add54, %conv528.i
  %and.i499.i = and i64 %mul529.i, 255
  %arrayidx.i500.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %and.i499.i
  %retval.sroa.0.0.copyload.i501.i = load double, ptr addrspace(1) %arrayidx.i500.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %retval.sroa.5.0.arrayidx.sroa_idx.i502.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx.i500.i, i64 8
  %retval.sroa.5.0.copyload.i503.i = load double, ptr addrspace(1) %retval.sroa.5.0.arrayidx.sroa_idx.i502.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %shr.i504.i = lshr i64 %mul529.i, 8
  %and1.i505.i = and i64 %shr.i504.i, 255
  %add2.i506.i = or disjoint i64 %and1.i505.i, 256
  %arrayidx3.i507.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %add2.i506.i
  %62 = load double, ptr addrspace(1) %arrayidx3.i507.i, align 8, !tbaa !17, !noalias !12, !amdgpu.noclobber !10
  %mul5.i508.i = fmul contract double %retval.sroa.0.0.copyload.i501.i, %62
  %y10.i509.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx3.i507.i, i64 8
  %63 = load double, ptr addrspace(1) %y10.i509.i, align 8, !tbaa !19, !noalias !12, !amdgpu.noclobber !10
  %mul11.i510.i = fmul contract double %retval.sroa.5.0.copyload.i503.i, %63
  %sub.i511.i = fsub contract double %mul5.i508.i, %mul11.i510.i
  %mul18.i512.i = fmul contract double %retval.sroa.5.0.copyload.i503.i, %62
  %mul25.i513.i = fmul contract double %retval.sroa.0.0.copyload.i501.i, %63
  %add26.i514.i = fadd contract double %mul18.i512.i, %mul25.i513.i
  %mul535.i = fmul contract double %add104.i421.i, %sub.i511.i
  %mul539.i = fmul contract double %add213.i458.i, %add26.i514.i
  %add540.i = fadd contract double %mul535.i, %mul539.i
  %mul544.i = fmul contract double %add213.i458.i, %sub.i511.i
  %mul548.i = fmul contract double %add104.i421.i, %add26.i514.i
  %sub549.i = fsub contract double %mul544.i, %mul548.i
  %add555.i = add nuw nsw i32 %rem330.i.zext, 100
  %conv556.i = zext nneg i32 %add555.i to i64
  %mul557.i = mul nuw nsw i64 %add54, %conv556.i
  %and.i518.i = and i64 %mul557.i, 255
  %arrayidx.i519.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %and.i518.i
  %retval.sroa.0.0.copyload.i520.i = load double, ptr addrspace(1) %arrayidx.i519.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %retval.sroa.5.0.arrayidx.sroa_idx.i521.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx.i519.i, i64 8
  %retval.sroa.5.0.copyload.i522.i = load double, ptr addrspace(1) %retval.sroa.5.0.arrayidx.sroa_idx.i521.i, align 8, !tbaa !15, !noalias !12, !amdgpu.noclobber !10
  %shr.i523.i = lshr i64 %mul557.i, 8
  %and1.i524.i = and i64 %shr.i523.i, 255
  %add2.i525.i = or disjoint i64 %and1.i524.i, 256
  %arrayidx3.i526.i = getelementptr inbounds %struct.rocfft_complex, ptr addrspace(1) %large_twiddles.coerce, i64 %add2.i525.i
  %64 = load double, ptr addrspace(1) %arrayidx3.i526.i, align 8, !tbaa !17, !noalias !12, !amdgpu.noclobber !10
  %mul5.i527.i = fmul contract double %retval.sroa.0.0.copyload.i520.i, %64
  %y10.i528.i = getelementptr inbounds i8, ptr addrspace(1) %arrayidx3.i526.i, i64 8
  %65 = load double, ptr addrspace(1) %y10.i528.i, align 8, !tbaa !19, !noalias !12, !amdgpu.noclobber !10
  %mul11.i529.i = fmul contract double %retval.sroa.5.0.copyload.i522.i, %65
  %sub.i530.i = fsub contract double %mul5.i527.i, %mul11.i529.i
  %mul18.i531.i = fmul contract double %retval.sroa.5.0.copyload.i522.i, %64
  %mul25.i532.i = fmul contract double %retval.sroa.0.0.copyload.i520.i, %65
  %add26.i533.i = fadd contract double %mul18.i531.i, %mul25.i532.i
  %mul563.i = fmul contract double %add54.i406.i, %sub.i530.i
  %mul567.i = fmul contract double %add163.i443.i, %add26.i533.i
  %add568.i = fadd contract double %mul563.i, %mul567.i
  %mul572.i = fmul contract double %add163.i443.i, %sub.i530.i
  %mul576.i = fmul contract double %add54.i406.i, %add26.i533.i
  %sub577.i = fsub contract double %mul572.i, %mul576.i
  %mul177 = mul i64 %6, %conv53
  %div180.lhs.trunc = trunc nuw nsw i32 %11 to i16
  %div180284 = udiv i16 %div180.lhs.trunc, 400
  %narrow = mul nuw nsw i16 %div180284, 125
  %mul181 = zext nneg i16 %narrow to i32
  %add185 = add nuw nsw i32 %mul181, %rem330.i.zext
  %conv187 = zext nneg i32 %add185 to i64
  %mul188 = mul i64 %1, %conv187
  %add189 = add i64 %mul177, %mul188
  %conv190 = trunc i64 %add189 to i32
  %conv191 = trunc i64 %add49 to i32
  %66 = insertelement <2 x double> poison, double %add456.i, i64 0
  %67 = insertelement <2 x double> %66, double %sub465.i, i64 1
  %mul.i183 = shl i32 %conv190, 4
  %mul4.i = shl i32 %conv191, 4
  %cond.i.i184 = select i1 %spec.select, i32 %mul.i183, i32 -1
  %68 = bitcast <2 x double> %67 to <4 x float>
  %69 = ptrtoint ptr %7 to i64
  %buffer_rsc.i.sroa.0.0.extract.trunc.i185 = trunc i64 %69 to i32
  %70 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i185)
  %ret.sroa.0.0.vec.insert.i.i = insertelement <4 x i32> poison, i32 %70, i64 0
  %buffer_rsc.i.sroa.0.4.extract.shift.i186 = lshr i64 %69, 32
  %buffer_rsc.i.sroa.0.4.extract.trunc.i187 = trunc nuw i64 %buffer_rsc.i.sroa.0.4.extract.shift.i186 to i32
  %71 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i187)
  %ret.sroa.0.4.vec.insert.i.i = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i, i32 %71, i64 1
  %ret.sroa.0.8.vecblend.i.i = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %72 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul4.i)
  tail call void @llvm.amdgcn.raw.buffer.store.v4f32(<4 x float> noundef %68, <4 x i32> noundef %ret.sroa.0.8.vecblend.i.i, i32 noundef %cond.i.i184, i32 noundef %72, i32 noundef 0) #7
  %add212 = add nuw nsw i32 %add185, 25
  %conv213 = zext nneg i32 %add212 to i64
  %mul214 = mul i64 %1, %conv213
  %add215 = add i64 %mul177, %mul214
  %conv216 = trunc i64 %add215 to i32
  %73 = insertelement <2 x double> poison, double %add484.i, i64 0
  %74 = insertelement <2 x double> %73, double %sub493.i, i64 1
  %mul.i188 = shl i32 %conv216, 4
  %cond.i.i190 = select i1 %spec.select, i32 %mul.i188, i32 -1
  %75 = bitcast <2 x double> %74 to <4 x float>
  %76 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i185)
  %ret.sroa.0.0.vec.insert.i.i192 = insertelement <4 x i32> poison, i32 %76, i64 0
  %77 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i187)
  %ret.sroa.0.4.vec.insert.i.i195 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i192, i32 %77, i64 1
  %ret.sroa.0.8.vecblend.i.i196 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i195, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %78 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul4.i)
  tail call void @llvm.amdgcn.raw.buffer.store.v4f32(<4 x float> noundef %75, <4 x i32> noundef %ret.sroa.0.8.vecblend.i.i196, i32 noundef %cond.i.i190, i32 noundef %78, i32 noundef 0) #7
  %add239 = add nuw nsw i32 %add185, 50
  %conv240 = zext nneg i32 %add239 to i64
  %mul241 = mul i64 %1, %conv240
  %add242 = add i64 %mul177, %mul241
  %conv243 = trunc i64 %add242 to i32
  %79 = insertelement <2 x double> poison, double %add512.i, i64 0
  %80 = insertelement <2 x double> %79, double %sub521.i, i64 1
  %mul.i197 = shl i32 %conv243, 4
  %cond.i.i199 = select i1 %spec.select, i32 %mul.i197, i32 -1
  %81 = bitcast <2 x double> %80 to <4 x float>
  %82 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i185)
  %ret.sroa.0.0.vec.insert.i.i201 = insertelement <4 x i32> poison, i32 %82, i64 0
  %83 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i187)
  %ret.sroa.0.4.vec.insert.i.i204 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i201, i32 %83, i64 1
  %ret.sroa.0.8.vecblend.i.i205 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i204, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %84 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul4.i)
  tail call void @llvm.amdgcn.raw.buffer.store.v4f32(<4 x float> noundef %81, <4 x i32> noundef %ret.sroa.0.8.vecblend.i.i205, i32 noundef %cond.i.i199, i32 noundef %84, i32 noundef 0) #7
  %add266 = add nuw nsw i32 %add185, 75
  %conv267 = zext nneg i32 %add266 to i64
  %mul268 = mul i64 %1, %conv267
  %add269 = add i64 %mul177, %mul268
  %conv270 = trunc i64 %add269 to i32
  %85 = insertelement <2 x double> poison, double %add540.i, i64 0
  %86 = insertelement <2 x double> %85, double %sub549.i, i64 1
  %mul.i206 = shl i32 %conv270, 4
  %cond.i.i208 = select i1 %spec.select, i32 %mul.i206, i32 -1
  %87 = bitcast <2 x double> %86 to <4 x float>
  %88 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i185)
  %ret.sroa.0.0.vec.insert.i.i210 = insertelement <4 x i32> poison, i32 %88, i64 0
  %89 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i187)
  %ret.sroa.0.4.vec.insert.i.i213 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i210, i32 %89, i64 1
  %ret.sroa.0.8.vecblend.i.i214 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i213, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %90 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul4.i)
  tail call void @llvm.amdgcn.raw.buffer.store.v4f32(<4 x float> noundef %87, <4 x i32> noundef %ret.sroa.0.8.vecblend.i.i214, i32 noundef %cond.i.i208, i32 noundef %90, i32 noundef 0) #7
  %add293 = add nuw nsw i32 %add185, 100
  %conv294 = zext nneg i32 %add293 to i64
  %mul295 = mul i64 %1, %conv294
  %add296 = add i64 %mul177, %mul295
  %conv297 = trunc i64 %add296 to i32
  %91 = insertelement <2 x double> poison, double %add568.i, i64 0
  %92 = insertelement <2 x double> %91, double %sub577.i, i64 1
  %mul.i215 = shl i32 %conv297, 4
  %cond.i.i217 = select i1 %spec.select, i32 %mul.i215, i32 -1
  %93 = bitcast <2 x double> %92 to <4 x float>
  %94 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.0.extract.trunc.i185)
  %ret.sroa.0.0.vec.insert.i.i219 = insertelement <4 x i32> poison, i32 %94, i64 0
  %95 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %buffer_rsc.i.sroa.0.4.extract.trunc.i187)
  %ret.sroa.0.4.vec.insert.i.i222 = insertelement <4 x i32> %ret.sroa.0.0.vec.insert.i.i219, i32 %95, i64 1
  %ret.sroa.0.8.vecblend.i.i223 = shufflevector <4 x i32> %ret.sroa.0.4.vec.insert.i.i222, <4 x i32> <i32 poison, i32 poison, i32 -2, i32 131072>, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %96 = tail call i32 @llvm.amdgcn.readfirstlane(i32 %mul4.i)
  tail call void @llvm.amdgcn.raw.buffer.store.v4f32(<4 x float> noundef %93, <4 x i32> noundef %ret.sroa.0.8.vecblend.i.i223, i32 noundef %cond.i.i217, i32 noundef %96, i32 noundef 0) #7
  ret void

for.body:                                         ; preds = %entry, %for.body
  %conv24291 = phi i64 [ %inc, %for.body ], [ 2, %entry ]
  %offset_in.0290 = phi i64 [ %add36, %for.body ], [ %mul20, %entry ]
  %offset_out.0289 = phi i64 [ %add40, %for.body ], [ %mul23, %entry ]
  %plength.0288 = phi i64 [ %mul26, %for.body ], [ %add, %entry ]
  %remaining.0287 = phi i64 [ %div32, %for.body ], [ %div18, %entry ]
  %arrayidx25 = getelementptr inbounds i64, ptr addrspace(1) %lengths.coerce, i64 %conv24291
  %97 = load i64, ptr addrspace(1) %arrayidx25, align 8, !tbaa !6, !amdgpu.noclobber !10
  %mul26 = mul i64 %97, %plength.0288
  %remaining.0287.frozen = freeze i64 %remaining.0287
  %.frozen = freeze i64 %97
  %div32 = udiv i64 %remaining.0287.frozen, %.frozen
  %98 = mul i64 %div32, %.frozen
  %rem29.decomposed = sub i64 %remaining.0287.frozen, %98
  %arrayidx34 = getelementptr inbounds i64, ptr addrspace(1) %stride_in.coerce, i64 %conv24291
  %99 = load i64, ptr addrspace(1) %arrayidx34, align 8, !tbaa !6, !amdgpu.noclobber !10
  %mul35 = mul i64 %99, %rem29.decomposed
  %add36 = add i64 %mul35, %offset_in.0290
  %arrayidx38 = getelementptr inbounds i64, ptr addrspace(1) %stride_out.coerce, i64 %conv24291
  %100 = load i64, ptr addrspace(1) %arrayidx38, align 8, !tbaa !6, !amdgpu.noclobber !10
  %mul39 = mul i64 %100, %rem29.decomposed
  %add40 = add i64 %mul39, %offset_out.0289
  %inc = add nuw i64 %conv24291, 1
  %cmp = icmp ult i64 %inc, %dim
  br i1 %cmp, label %for.body, label %for.cond.cleanup.loopexit, !llvm.loop !20
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(write)
declare void @llvm.amdgcn.raw.buffer.store.v4f32(<4 x float>, <4 x i32>, i32, i32, i32 immarg) #2

; Function Attrs: convergent nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(read)
declare <4 x float> @llvm.amdgcn.raw.buffer.load.v4f32(<4 x i32>, i32, i32, i32 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workitem.id.x() #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.amdgcn.workgroup.id.x() #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { convergent nocallback nofree nounwind willreturn memory(none) }
attributes #1 = { convergent mustprogress nofree norecurse nounwind "amdgpu-flat-work-group-size"="1,400" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx908" "target-features"="+16-bit-insts,+ci-insts,+cumode,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot3-insts,+dot4-insts,+dot5-insts,+dot6-insts,+dot7-insts,+dpp,+gfx8-insts,+gfx9-insts,+mai-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64" "uniform-work-group-size"="true" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(write) }
attributes #3 = { convergent nocallback nofree nounwind willreturn }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(read) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #7 = { convergent nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!opencl.ocl.version = !{!4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!1 = !{i32 1, !"amdgpu_printf_kind", !"hostcall"}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{i32 8, !"PIC Level", i32 2}
!4 = !{i32 2, i32 0}
!5 = !{!"AOMP_STANDALONE_19.0-2 clang version 19.0.0_AOMP_STANDALONE_19.0-2 (ssh://lmeadows@gerrit-git.amd.com:29418/lightning/ec/llvm-project f39dcaed48cb5a76eb932ff2f6d44db24ab90977)"}
!6 = !{!7, !7, i64 0}
!7 = !{!"long", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{}
!11 = !{i32 0, i32 1024}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_Z29inverse_length125_SBCC_deviceI14rocfft_complexIdELb0EL9StrideBin1ELb0ELb1ELb1ELm2ELm8EEvPT_PN9real_typeIS3_E4typeES4_PKS3_jjjbSA_m: %twiddles"}
!14 = distinct !{!14, !"_Z29inverse_length125_SBCC_deviceI14rocfft_complexIdELb0EL9StrideBin1ELb0ELb1ELb1ELm2ELm8EEvPT_PN9real_typeIS3_E4typeES4_PKS3_jjjbSA_m"}
!15 = !{!16, !16, i64 0}
!16 = !{!"double", !8, i64 0}
!17 = !{!18, !16, i64 0}
!18 = !{!"_ZTS14rocfft_complexIdE", !16, i64 0, !16, i64 8}
!19 = !{!18, !16, i64 8}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.mustprogress"}
